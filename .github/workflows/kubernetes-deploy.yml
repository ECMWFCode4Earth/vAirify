name: Deploy to Kubernetes

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - uses: actions/checkout@v3

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: 'latest'

    - name: Login to Harbor Registry
      uses: docker/login-action@v2
      with:
        registry: eccr.ecmwf.int
        username: ${{ secrets.HARBOR_USERNAME }}
        password: ${{ secrets.HARBOR_PASSWORD }}

    - name: Populate values.yaml
      run: |
        cd helm/vairify
        sed -i "s?DUMMY_IMAGE_TAG?latest?g" values.yaml
        sed -i "s?DUMMY_MONGO_DB_NAME?${{ secrets.MONGO_DB_NAME }}?g" values.yaml
        sed -i "s?DUMMY_OPEN_AQ_API_URL?${{ secrets.OPEN_AQ_API_URL }}?g" values.yaml
        sed -i "s?DUMMY_OPEN_AQ_API_KEY?${{ secrets.OPEN_AQ_API_KEY }}?g" values.yaml
        sed -i "s?DUMMY_CDSAPI_URL?${{ secrets.CDSAPI_URL }}?g" values.yaml
        sed -i "s?DUMMY_CDSAPI_KEY?${{ secrets.CDSAPI_KEY }}?g" values.yaml

    - name: Add repo
      run: |
        helm repo add --username ${{ secrets.HARBOR_USERNAME }} --password ${{ secrets.HARBOR_PASSWORD }} cams-applications https://eccr.ecmwf.int/chartrepo/cams-applications || helm repo update cams-applications

    - name: Retry Helm Chart Update and Pod Update
      run: |
        RETRIES=3
        SLEEP_DURATION=10
        for (( i=1; i<=RETRIES; i++ )); do
          echo "Attempt $i: Upgrading/Installing app with Helm..."
          
          # Perform the Helm upgrade/install and pod update steps
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml && chmod 400 kubeconfig.yaml
          echo "Executing: helm upgrade --install -n ${{ vars.K8S_NAMESPACE }} vairify cams-applications/vairify --version 0.1.0 --values helm/vairify/values.yaml"
          helm upgrade --install -n ${{ vars.K8S_NAMESPACE }} vairify cams-applications/vairify --version 0.1.0 --values helm/vairify/values.yaml
          
          if [ $? -eq 0 ]; then
            echo "Helm upgrade/install was successful."
            break
          else
            echo "Attempt $i failed. Retrying in $SLEEP_DURATION seconds..."
            sleep $SLEEP_DURATION
          fi
          
          if [ $i -eq $RETRIES ]; then
            echo "Helm upgrade/install failed after $RETRIES attempts. Failing the deployment."
            exit 1
          fi
        done

    - name: Force update of pods
      run: |
        RETRIES=3
        SLEEP_DURATION=10
        for (( i=1; i<=RETRIES; i++ )); do
          echo "Attempt $i: Deleting pods..."
          
          kubectl delete pods -n ${{ vars.K8S_NAMESPACE }} -l app=vairify
          
          if [ $? -eq 0 ]; then
            echo "Pod deletion successful."
            break
          else
            echo "Attempt $i failed. Retrying in $SLEEP_DURATION seconds..."
            sleep $SLEEP_DURATION
          fi
          
          if [ $i -eq $RETRIES ]; then
            echo "Pod deletion failed after $RETRIES attempts. Failing the deployment."
            exit 1
          fi
        done
      env:
        KUBECONFIG: kubeconfig.yaml