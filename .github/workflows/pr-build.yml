name: pr-build

on:
  pull_request:
    types: ['opened', 'reopened', 'synchronize']
    branches:
      - 'main'

jobs:
  detect-change-scope:
    runs-on: ubuntu-latest
    permissions:
        pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      etl: ${{ steps.filter.outputs.etl }}
      api: ${{ steps.filter.outputs.api }}
      ui:  ${{ steps.filter.outputs.ui }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3.0.2  
      id: filter
      with:
        filters: |
          backend:
            - 'air-quality-backend/**'
          etl:
            - 'air-quality-backend/src/air_quality/etl/**'
            - 'air-quality-backend/tests/etl/**'
          api:
            - 'air-quality-backend/src/air_quality/api/**'
            - 'air-quality-backend/tests/api/**'
          ui:
            - 'air-quality-ui/**'

  pr-checks-backend:
    needs: detect-change-scope
    if: ${{ needs.detect-change-scope.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'air-quality-backend'
          sparse-checkout-cone-mode: false

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge
          environment-file: air-quality-backend/conda/environment.yml
          auto-activate-base: false
          activate-environment: pr-env

      - name: Get Dependencies
        run: poetry install
        working-directory: ./air-quality-backend
        
      - name: Run lint check
        run: python -m flake8 --append-config .flake8
        working-directory: ./air-quality-backend

      - name: Run database unit tests
        run: python -m pytest --cov=src/air_quality/database --cov-report= --cov-append tests/database
        working-directory: ./air-quality-backend
        
      - name: Run etl unit tests
        run: python -m pytest --cov=src/air_quality/etl --cov=scripts --cov-report= --cov-append tests/etl
        if: ${{ needs.detect-change-scope.outputs.etl == 'true' }}
        working-directory: ./air-quality-backend

      - name: Run api unit tests
        run: python -m pytest --cov=src/air_quality/api --cov-report= --cov-append tests/api
        if: ${{ needs.detect-change-scope.outputs.api == 'true' }}
        working-directory: ./air-quality-backend

      - name: Convert to report 
        run: coverage xml
        working-directory: ./air-quality-backend

      - name: Code Coverage Report
        uses: orgoro/coverage@v3.1
        with:
            coverageFile: ./air-quality-backend/coverage.xml
            token: ${{ secrets.GITHUB_TOKEN }}
            thresholdAll: 0.6
            thresholdModified: 0.9
            thresholdNew: 1

  pr-checks-ui:
    runs-on: ubuntu-latest
    needs: detect-change-scope
    if: ${{ needs.detect-change-scope.outputs.ui == 'true' }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'air-quality-ui'
          sparse-checkout-cone-mode: false
      
      - name: Install
        run: npm ci
        working-directory: 'air-quality-ui'

      - name: Run lint check
        run: npm run lint
        working-directory: 'air-quality-ui'

      - name: Run tests with coverage
        uses: ArtiomTr/jest-coverage-report-action@v2.0-rc.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: 'air-quality-ui'
          threshold: 90
          test-script: npm run test:ci
